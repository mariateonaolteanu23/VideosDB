package command;

import common.Constants;
import common.Database;
import entertainment.Video;
import fileio.ActionInputData;
import user.User;

import java.util.List;

public final class Rating extends Command {

    public Rating(final ActionInputData actionInputData) {
        super(actionInputData);
    }


    /**
     * Gives rating for a video chosen by a user
     * @return the output message generated by the rating command
     */
    public String executeAction() {
        //  Get title of rated video
        String title = getActionInputData().getTitle();

        // Get user by username
        User user = getUser(getActionInputData().getUsername());

        //  Video hasn't been watched
        if (!isSeen(user, title)) {
            return Constants.ERROR + title + Constants.NOT_SEEN;
        }

        //  Note user activity
        if (user.getRatedVideos().contains(title + getActionInputData().getSeasonNumber())) {
            return Constants.ERROR + title + Constants.ALREADY_RATED;
        }

        //  Get all videos in database
        List<Video> videos = Database.getDatabase().getAllVideos();

        for (Video video : videos) {
            //  Give rating for video
            if (video.getTitle().equals(title)) {
                video.rateVideo(getActionInputData().getGrade(),
                        getActionInputData().getSeasonNumber());

                //  Update the average rating of the video
                video.updateRating();
            }
        }

        //  Add video to list of rated videos by user
        user.getRatedVideos().add(title + getActionInputData().getSeasonNumber());

        //  Rating done successfully
        return Constants.SUCCESS + title + Constants.RATED
                + getActionInputData().getGrade() + " by " + user.getUsername();
    }
}
